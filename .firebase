service cloud.firestore {
  match /databases/{database}/documents {
    match /challenges/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}

{
    "challenges": [
      {
        "name": "Complete Day 1",
        "completed": false
      },
      {
        "name": "Complete Day 2",
        "completed": false
      }
    ]
  }
  
  {
    "streak": 5,
    "lastCompleted": "2024-07-01T00:00:00Z"
  }
  
// firebase CLOUD functions!! 
const functions = require('firebase-functions');
const admin = require('firebase-admin');
admin.initializeApp();

const db = admin.firestore();

exports.syncUserData = functions.https.onRequest(async (req, res) => {
    try {
        const { userId, userData } = req.body;
        await db.collection('users').doc(userId).set(userData, { merge: true });
        res.status(200).send('User data synced successfully.');
    } catch (error) {
        console.error('Error syncing user data:', error);
        res.status(500).send('Error syncing user data.');
    }
});

exports.updateChallengeProgress = functions.https.onRequest(async (req, res) => {
    try {
        const { userId, challengeId, progress } = req.body;
        await db.collection('challenges').doc(userId).collection('userChallenges').doc(challengeId).update({ progress });
        res.status(200).send('Challenge progress updated successfully.');
    } catch (error) {
        console.error('Error updating challenge progress:', error);
        res.status(500).send('Error updating challenge progress.');
    }
});

async function syncUserData(userId, userData) {
    try {
        const response = await fetch('https://us-central1-your-project-id.cloudfunctions.net/syncUserData', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId, userData }),
        });
        if (!response.ok) {
            throw new Error('Failed to sync user data.');
        }
        console.log('User data synced successfully.');
    } catch (error) {
        console.error('Error syncing user data:', error);
    }
}

async function updateChallengeProgress(userId, challengeId, progress) {
    try {
        const response = await fetch('https://us-central1-your-project-id.cloudfunctions.net/updateChallengeProgress', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId, challengeId, progress }),
        });
        if (!response.ok) {
            throw new Error('Failed to update challenge progress.');
        }
        console.log('Challenge progress updated successfully.');
    } catch (error) {
        console.error('Error updating challenge progress:', error);
    }
}
